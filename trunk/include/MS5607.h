#ifndef __MS5607_H
#define __MS5607_H


#define MS5607_CS_Port							GPIOA
#define MS5607_CS_Pin							GPIO_Pin_3


#define MS5607_CMD_ACD_READ					0x00
#define MS5607_CMD_RESET						0x1E
#define MS5607_CMD_CONVERT_D1_OSR_256		0x40
#define MS5607_CMD_CONVERT_D1_OSR_512		0x42
#define MS5607_CMD_CONVERT_D1_OSR_1024		0x44
#define MS5607_CMD_CONVERT_D1_OSR_2048		0x46
#define MS5607_CMD_CONVERT_D1_OSR_4096		0x48
#define MS5607_CMD_CONVERT_D2_OSR_256		0x50
#define MS5607_CMD_CONVERT_D2_OSR_512		0x52
#define MS5607_CMD_CONVERT_D2_OSR_1024		0x54
#define MS5607_CMD_CONVERT_D2_OSR_2048		0x56
#define MS5607_CMD_CONVERT_D2_OSR_4096		0x58
#define MS5607_CMD_PROM_READ_SERIAL			0xA0
#define MS5607_CMD_PROM_READ_SENS			0xA2
#define MS5607_CMD_PROM_READ_OFF				0xA4
#define MS5607_CMD_PROM_READ_TCS				0xA6
#define MS5607_CMD_PROM_READ_TCO				0xA8
#define MS5607_CMD_PROM_READ_TREF			0xAA
#define MS5607_CMD_PROM_READ_TEMPSENS		0xAC
#define MS5607_CMD_PROM_READ_CRC				0xAE

#define MS5607_CMD_CONVERT_D1					MS5607_CMD_CONVERT_D1_OSR_1024
#define MS5607_CMD_CONVERT_D2					MS5607_CMD_CONVERT_D1_OSR_1024

#if (MS5607_CMD_CONVERT_D1 == MS5607_CMD_CONVERT_D1_OSR_256)
	#define MS5607_CMD_CONVERT_TIME			1
#endif
#if (MS5607_CMD_CONVERT_D1 == MS5607_CMD_CONVERT_D1_OSR_512)
	#define MS5607_CMD_CONVERT_TIME			2
#endif
#if (MS5607_CMD_CONVERT_D1 == MS5607_CMD_CONVERT_D1_OSR_1024)
	#define MS5607_CMD_CONVERT_TIME			3
#endif
#if (MS5607_CMD_CONVERT_D1 == MS5607_CMD_CONVERT_D1_OSR_2048)
	#define MS5607_CMD_CONVERT_TIME			5
#endif
#if (MS5607_CMD_CONVERT_D1 == MS5607_CMD_CONVERT_D1_OSR_4096)
	#define MS5607_CMD_CONVERT_TIME			10
#endif

typedef struct {
	bool lock;
	int32_t temperature;	
	uint16_t pressure;
} MS5607_values_t;


void MS5607_Init(void);
void MS5607_Configuration(void);

void MS5607_measure(void);

#endif
